"0",""
"0",""
"0","# Generate predictor variable (x)"
"0","ex_data <- tibble("
"0","  x = rnorm(100, mean = 0, sd = 2)  # 100 random values from N(0,2)"
"0",")"
"0",""
"0","# Define a logit function with coefficients"
"0","beta_0 <- -1  # Intercept"
"0","beta_1 <- 2   # Slope"
"0",""
"0","# Compute probabilities using logistic (sigmoid) function"
"0","ex_data <- ex_data %>%"
"0","  mutate(prob = exp(beta_0 + beta_1 * x) / (1 + exp(beta_0 + beta_1 * x)),"
"0","         y = rbinom(100, size = 1, prob = prob))  # Convert probabilities to binary outcome"
"0",""
"0","# Fit a logistic regression model"
"0","logit_model <- glm(y ~ x, data = ex_data, family = binomial)"
"0",""
"0","# Plot data with logistic regression fit"
"0","ggplot(ex_data, aes(x = x, y = y)) +"
"0","  geom_jitter(width = 0.1, height = 0.05, alpha = 0.5, color = ""blue"") +  # Jitter to avoid overplotting"
"0","  geom_smooth(method = ""glm"", method.args = list(family = binomial), color = ""red"", se = FALSE) +  # Logistic fit"
"0","  theme_minimal() +"
"0","  labs(title = ""Simulated Logit Function with Logistic Regression Fit"","
"0","       x = ""X values"","
"0","       y = ""Binary Outcome (Y)"")"
"0",""
